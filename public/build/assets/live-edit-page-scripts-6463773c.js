mw.require("options.js");mw.liveEditSaveService={grammarlyFix:function(e){return mw.$("grammarly-btn",e).remove(),mw.$("grammarly-card",e).remove(),mw.$("g.gr_",e).each(function(){mw.$(this).replaceWith(this.innerHTML)}),mw.$("[data-gramm_id]",e).removeAttr("data-gramm_id"),mw.$("[data-gramm]",e).removeAttr("data-gramm"),mw.$("[data-gramm_id]",e).removeAttr("data-gramm_id"),mw.$("grammarly-card",e).remove(),mw.$("grammarly-inline-cards",e).remove(),mw.$("grammarly-popups",e).remove(),mw.$("grammarly-extension",e).remove(),e},saving:!1,coreSave:function(e){if(!e)return!1;$.each(e,function(){var t=mw.tools.parseHtml(this.html).body;mw.liveEditSaveService.grammarlyFix(t),mw.liveEditSaveService.animationsClearFix(t),this.html=t.innerHTML}),mw.liveEditSaveService.saving=!0,e=JSON.stringify(e),e=btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,function(a,i){return String.fromCharCode("0x"+i)})),e={data_base64:e};var r=mw.ajax({type:"POST",url:mw.settings.api_url+"save_edit",data:e,dataType:"json",success:function(t){t&&t.new_page_url&&!mw.liveEditSaveService.DraftSaving&&(window.mw.parent().askusertostay=!1,window.mw.askusertostay=!1,window.location.href=t.new_page_url)}});return r.always(function(){mw.liveEditSaveService.saving=!1}),r},parseContent:function(e){e=e||document.body;var r=mw.tools.parseHtml(e.innerHTML);mw.$(".element-current",r).removeClass("element-current"),mw.$(".element-active",r).removeClass("element-active"),mw.$(".disable-resize",r).removeClass("disable-resize"),mw.$(".mw-module-drag-clone",r).removeClass("mw-module-drag-clone"),mw.$(".ui-draggable",r).removeClass("ui-draggable"),mw.$(".ui-draggable-handle",r).removeClass("ui-draggable-handle"),mw.$(".mt-ready",r).removeClass("mt-ready"),mw.$(".mw-webkit-drag-hover-binded",r).removeClass("mw-webkit-drag-hover-binded"),mw.$(".module-cat-toggle-Modules",r).removeClass("module-cat-toggle-Modules"),mw.$(".mw-module-drag-clone",r).removeClass("mw-module-drag-clone"),mw.$("-module",r).removeClass("-module"),mw.$(".empty-element",r).remove(),mw.$(".empty-element",r).remove(),mw.$(".edit .ui-resizable-handle",r).remove(),mw.$("script",r).remove(),mw.tools.classNamespaceDelete("all","ui-",r,"starts"),mw.$("[contenteditable]",r).removeAttr("contenteditable");for(var t=r.querySelectorAll("[contenteditable]"),a=t.length,i=0;i<a;i++)t[i].removeAttribute("contenteditable");for(var t=r.querySelectorAll(".module"),a=t.length,i=0;i<a;i++)t[i].querySelector(".edit")===null&&(t[i].innerHTML="");return r},htmlAttrValidate:function(e){var r=[];return $.each(e,function(){var t=this.outerHTML;t=t.replace(/url\(&quot;/g,"url('"),t=t.replace(/jpg&quot;/g,"jpg'"),t=t.replace(/jpeg&quot;/g,"jpeg'"),t=t.replace(/png&quot;/g,"png'"),t=t.replace(/gif&quot;/g,"gif'"),r.push($(t)[0])}),r},cleanUnwantedTags:function(e){return mw.$(".mw-skip-and-remove,script",e).remove(),e},animationsClearFix:function(e){return mw.$('[class*="animate__"]').each(function(){mw.tools.classNamespaceDelete(this,"animate__")}),e},collectData:function(e){mw.$(e).each(function(){mw.$("meta",this).remove(),$(".mw-le-spacer",this).empty().removeAttr("data-resizable").removeAttr("style")}),e=this.htmlAttrValidate(e);var r=e.length,t=0,a={},i={};if(r>0)for(;t<r;t++){a.item=e[t];var v=mw.tools.mwattr(a.item,"rel");v||(mw.$(a.item).removeClass("changed"),mw.tools.foreachParents(a.item,function(s){var d=this.className,f=mw.tools.mwattr(this,"rel");mw.tools.hasClass(d,"edit")&&mw.tools.hasClass(d,"changed")&&f&&(a.item=this,mw.tools.stopLoop(s))}));var v=mw.tools.mwattr(a.item,"rel");if(!v){var c=a.item.id?"#"+a.item.id:"";console.warn("Skipped save: .edit"+c+" element does not have rel attribute.");continue}mw.$(a.item).removeClass("changed orig_changed"),mw.$(a.item).removeClass("module-over"),mw.$(".module-over",a.item).each(function(){mw.$(this).removeClass("module-over")}),mw.$("[class]",a.item).each(function(){var s=this.getAttribute("class");typeof s=="string"&&(s=s.trim()),s||this.removeAttribute("class")});var l=mw.liveEditSaveService.cleanUnwantedTags(a.item).innerHTML,m={},o=a.item.attributes;if(o.length>0)for(var n=0,w=o.length;n<w;n++)m[o[n].nodeName]=o[n].nodeValue;var u={attributes:m,html:l},g="field_data_"+t;i[g]=u}return i},getData:function(e){var r=mw.liveEditSaveService.parseContent(e).body,t=r.querySelectorAll(".edit.changed");return mw.liveEditSaveService.collectData(t)},saveDisabled:!1,draftDisabled:!1,save:function(e,r,t){if(mw.trigger("beforeSaveStart",e),mw.liveedit&&mw.liveedit.cssEditor&&mw.liveedit.cssEditor.publishIfChanged(),mw.liveEditSaveService.saveDisabled)return!1;if(!e){var a=mw.liveEditSaveService.parseContent().body,i=a.querySelectorAll(".edit.changed");e=mw.liveEditSaveService.collectData(i)}var v=(mw.__pageAnimations||[]).filter(function(m){return m.animation!=="none"}),c={group:"template",key:"animations-global",value:JSON.stringify(v)};if(mw.options.saveOption(c,function(){}),mw.tools.isEmptyObject(e))return!1;mw._liveeditData=e,mw.trigger("saveStart",mw._liveeditData);var l=mw.liveEditSaveService.coreSave(mw._liveeditData);return l.error(function(){l.status==403&&(mw.dialog({id:"save_content_error_iframe_modal",html:"<iframe id='save_content_error_iframe' style='overflow-x:hidden;overflow-y:auto;' class='mw-modal-frame' ></iframe>",width:$(window).width()-90,height:$(window).height()-90}),mw.askusertostay=!1,mw.$("#save_content_error_iframe").ready(function(){var m=document.getElementById("save_content_error_iframe").contentWindow.document;m.open(),m.write(l.responseText),m.close();var o=0;m=document.getElementById("save_content_error_iframe").contentWindow.document,mw.$("#save_content_error_iframe").load(function(){var n=mw.$(".challenge-form",m).length;o++,n&&o==2&&setTimeout(function(){mw.askusertostay=!1,mw.$("#save_content_error_iframe_modal").remove()},150)})}))}),l.success(function(m){mw.$(".edit.changed").removeClass("changed"),mw.$(".orig_changed").removeClass("orig_changed"),document.querySelector(".edit.changed")!==null?mw.liveEditSaveService.save():(mw.askusertostay=!1,mw.trigger("saveEnd",m)),r&&r.call(m)}),l.fail(function(m,o,n){mw.trigger("saveFailed",o,n),t&&t.call(sdata)}),l}};addEventListener("load",()=>{const e=async()=>(console.log(mw.liveEditSaveService),new Promise((r,t)=>{console.log(mw.liveEditSaveService),mw.liveEditSaveService.save(void 0,()=>r(),()=>t())}));mw.top().app.save=async()=>(console.log(mw.liveEditSaveService),await e())});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
