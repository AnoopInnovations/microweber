if(window.self!==window.top){mw.liveEditSaveService={grammarlyFix:function(t){return mw.$("grammarly-btn",t).remove(),mw.$("grammarly-card",t).remove(),mw.$("g.gr_",t).each(function(){mw.$(this).replaceWith(this.innerHTML)}),mw.$("[data-gramm_id]",t).removeAttr("data-gramm_id"),mw.$("[data-gramm]",t).removeAttr("data-gramm"),mw.$("[data-gramm_id]",t).removeAttr("data-gramm_id"),mw.$("grammarly-card",t).remove(),mw.$("grammarly-inline-cards",t).remove(),mw.$("grammarly-popups",t).remove(),mw.$("grammarly-extension",t).remove(),t},saving:!1,coreSave:function(t){if(!t)return!1;$.each(t,function(){var e=mw.tools.parseHtml(this.html).body;mw.liveEditSaveService.grammarlyFix(e),mw.liveEditSaveService.animationsClearFix(e),this.html=e.innerHTML}),mw.liveEditSaveService.saving=!0,t=JSON.stringify(t),t=btoa(encodeURIComponent(t).replace(/%([0-9A-F]{2})/g,function(r,i){return String.fromCharCode("0x"+i)})),t={data_base64:t};var a=mw.ajax({type:"POST",url:mw.settings.api_url+"save_edit",data:t,dataType:"json",success:function(e){e&&e.new_page_url&&!mw.liveEditSaveService.DraftSaving&&(window.mw.parent().askusertostay=!1,window.mw.askusertostay=!1,window.location.href=e.new_page_url)}});return a.always(function(){mw.liveEditSaveService.saving=!1}),a},parseContent:function(t){t=t||document.body;var a=mw.tools.parseHtml(t.innerHTML);mw.$(".element-current",a).removeClass("element-current"),mw.$(".element-active",a).removeClass("element-active"),mw.$(".disable-resize",a).removeClass("disable-resize"),mw.$(".mw-module-drag-clone",a).removeClass("mw-module-drag-clone"),mw.$(".ui-draggable",a).removeClass("ui-draggable"),mw.$(".ui-draggable-handle",a).removeClass("ui-draggable-handle"),mw.$(".mt-ready",a).removeClass("mt-ready"),mw.$(".mw-webkit-drag-hover-binded",a).removeClass("mw-webkit-drag-hover-binded"),mw.$(".module-cat-toggle-Modules",a).removeClass("module-cat-toggle-Modules"),mw.$(".mw-module-drag-clone",a).removeClass("mw-module-drag-clone"),mw.$("-module",a).removeClass("-module"),mw.$(".empty-element",a).remove(),mw.$(".empty-element",a).remove(),mw.$(".edit .ui-resizable-handle",a).remove(),mw.$("script",a).remove(),mw.tools.classNamespaceDelete("all","ui-",a,"starts"),mw.$("[contenteditable]",a).removeAttr("contenteditable");for(var e=a.querySelectorAll("[contenteditable]"),r=e.length,i=0;i<r;i++)e[i].removeAttribute("contenteditable");for(var e=a.querySelectorAll(".module"),r=e.length,i=0;i<r;i++)e[i].querySelector(".edit")===null&&(e[i].innerHTML="");return a},htmlAttrValidate:function(t){var a=[];return $.each(t,function(){var e=this.outerHTML;e=e.replace(/url\(&quot;/g,"url('"),e=e.replace(/jpg&quot;/g,"jpg'"),e=e.replace(/jpeg&quot;/g,"jpeg'"),e=e.replace(/png&quot;/g,"png'"),e=e.replace(/gif&quot;/g,"gif'"),a.push($(e)[0])}),a},cleanUnwantedTags:function(t){return mw.$(".mw-skip-and-remove,script",t).remove(),t},animationsClearFix:function(t){return mw.$('[class*="animate__"]').each(function(){mw.tools.classNamespaceDelete(this,"animate__")}),t},collectData:function(t){mw.$(t).each(function(){mw.$("meta",this).remove(),$(".mw-le-spacer",this).empty().removeAttr("data-resizable").removeAttr("style")}),t=this.htmlAttrValidate(t);var a=t.length,e=0,r={},i={};if(a>0)for(;e<a;e++){r.item=t[e];var m=mw.tools.mwattr(r.item,"rel");m||(mw.$(r.item).removeClass("changed"),mw.tools.foreachParents(r.item,function(d){var u=this.className,g=mw.tools.mwattr(this,"rel");mw.tools.hasClass(u,"edit")&&mw.tools.hasClass(u,"changed")&&g&&(r.item=this,mw.tools.stopLoop(d))}));var m=mw.tools.mwattr(r.item,"rel");if(!m){var c=r.item.id?"#"+r.item.id:"";console.warn("Skipped save: .edit"+c+" element does not have rel attribute.");continue}mw.$(r.item).removeClass("changed orig_changed"),mw.$(r.item).removeClass("module-over"),mw.$(".mw-le-ghost-layout",r.item).remove(),mw.$("#mw-non-existing-temp-element-holder",r.item).remove(),mw.$(".module-over",r.item).each(function(){mw.$(this).removeClass("module-over")}),mw.$(".element[data-mwplaceholder]",r.item).each(function(){var d=!this.innerHTML.trim();d||mw.$(this).removeAttr("data-mwplaceholder")}),mw.$(".element.lipsum",r.item).each(function(){mw.$(this).removeClass("lipsum")}),mw.$("[data-mw-live-edithover]",r.item).each(function(){mw.$(this).removeAttr("data-mw-live-edithover")}),mw.$("[data-mw-temp-option-save]",r.item).each(function(){mw.$(this).removeAttr("data-mw-temp-option-save")}),mw.$("[class]",r.item).each(function(){var d=this.getAttribute("class");typeof d=="string"&&(d=d.trim()),d||this.removeAttribute("class")});var s=mw.liveEditSaveService.cleanUnwantedTags(r.item).innerHTML,o={},n=r.item.attributes;if(n.length>0)for(var l=0,w=n.length;l<w;l++)o[n[l].nodeName]=n[l].nodeValue;var p={attributes:o,html:s},f="field_data_"+e;i[f]=p}return i},getData:function(t){var a=mw.liveEditSaveService.parseContent(t).body,e=a.querySelectorAll(".edit.changed");return mw.liveEditSaveService.collectData(e)},saveDisabled:!1,draftDisabled:!1,save:function(t,a,e){if(mw.trigger("beforeSaveStart",t),mw.top().app&&mw.top().app&&mw.top().app.cssEditor&&mw.top().app.cssEditor.publishIfChanged(),mw.top().app&&mw.top().app&&mw.top().options&&mw.top().options.publishTempOptions(document),mw.liveEditSaveService.saveDisabled)return!1;if(!t){var r=mw.liveEditSaveService.parseContent().body,i=r.querySelectorAll(".edit.changed");t=mw.liveEditSaveService.collectData(i)}var m=(mw.__pageAnimations||[]).filter(function(o){return o.animation!=="none"});if(m&&m.length>0){var c={group:"template",key:"animations-global",value:JSON.stringify(m)};mw.top().options.saveOption(c)}if(mw.tools.isEmptyObject(t))return a&&a.call({}),!1;mw._liveeditData=t,mw.trigger("saveStart",mw._liveeditData);var s=mw.liveEditSaveService.coreSave(mw._liveeditData);return s.error(function(o){s.status==403&&(mw.dialog({id:"save_content_error_iframe_modal",html:"<iframe id='save_content_error_iframe' style='overflow-x:hidden;overflow-y:auto;' class='mw-modal-frame' ></iframe>",width:$(window).width()-90,height:$(window).height()-90}),mw.askusertostay=!1,mw.$("#save_content_error_iframe").ready(function(){var n=document.getElementById("save_content_error_iframe").contentWindow.document;n.open(),n.write(s.responseText),n.close();var l=0;n=document.getElementById("save_content_error_iframe").contentWindow.document,mw.$("#save_content_error_iframe").load(function(){var w=mw.$(".challenge-form",n).length;l++,w&&l==2&&setTimeout(function(){mw.askusertostay=!1,mw.$("#save_content_error_iframe_modal").remove()},150)})})),e&&e.call(o)}),s.success(function(o){mw.$(".edit.changed").removeClass("changed"),mw.$(".orig_changed").removeClass("orig_changed"),document.querySelector(".edit.changed")!==null?mw.liveEditSaveService.save():(mw.askusertostay=!1,mw.trigger("saveEnd",o)),a&&a.call(o)}),s.fail(function(o,n,l){mw.trigger("saveFailed",n,l),e&&e.call(sdata)}),s}},mw.saveLiveEdit=async()=>new Promise(t=>{mw.liveEditSaveService.save(void 0,()=>t(!0),()=>t(!1))}),mw.top().app.save=async()=>await mw.saveLiveEdit(),addEventListener("load",()=>{window.addEventListener("keydown",function(a){mw.top().app.canvas.dispatch("iframeKeyDown",{event:a})}),function(){function a(e){const r=!e.innerHTML.trim();r&&e.innerHTML.trim()===e.textContent.trim()?mw.element(e).append(`<p class="element" data-mwplaceholder="${mw.lang("This is sample text for your page")}"></p>`):e.classList[r?"add":"remove"]("mw-le-empty-element")}document.querySelectorAll(".edit").forEach(function(e){e.__$$_handleEmptyEditFields||(e.__$$_handleEmptyEditFields=!0,a(e),e.addEventListener("input",function(){a(this)}))}),mw.top().app.on("editChanged",e=>{setTimeout(()=>a(e))})}()});let v=null;mw.top().app.isNavigating=()=>!!v&&v.returnValue&&v.defaultPrevented===!0,self.onbeforeunload=function(t){v=t;var a=mw.top().app.canvas.getWindow();if(a.mw.isNavigating=!0,mw.top().app.canvas.dispatch("liveEditCanvasBeforeUnload"),setTimeout(function(e){e&&e&&e.mw&&(e.mw.isNavigating=!1)},1500,a),a&&a.mw&&a.mw.askusertostay)return!0;mw.top().spinner({element:mw.top().app.canvas.getFrame().parentElement,decorate:!0,size:52}).show()},mw.drag=mw.drag||{},mw.drag.save=function(){return mw.liveEditSaveService.save()},mw.drag.fix_placeholders=function(t,a){a=a||".edit .row";var e="div.col-md",r=mw.top().app.templateSettings.helperClasses.external_grids_col_classes,i;for(i=r.length-1;i>=0;--i)e+=",div."+r[i];mw.$(a).each(function(){var m=mw.$(this);m.children(e).each(function(){var c=mw.$(this).children("*");if(c.size()==0){mw.$(this).append('<div class="element" id="mw-element-'+mw.random()+'"></div>');var c=mw.$(this).children("div.element")}})})},mw.drag.module_settings=function(){var t=mw.top().app.liveEdit.moduleHandle.getTarget();return mw.top().app.editor.dispatch("onModuleSettingsRequest",t)},document.documentElement.addEventListener("click",function(t){var a=t.target,e=mw.tools.firstParentOrCurrentWithTag(a,"a");if(e&&e.href.indexOf("javascript:")!==0){const r=document.createElement("a");r.href=e.href,r.host!==location.host&&(!e.target||e.target==="_self")&&(t.preventDefault(),open(e.href))}}),document.addEventListener("keydown",function(t){if(t.ctrlKey&&t.key==="s")return mw.top().app.editor.dispatch("Ctrl+S",t)})}self===top&&window.addEventListener("load",v=>{if(window.mwLiveEditIframeBackUrl){var t=document.createElement("a");t.id="back-to-live-sticky-button",t.textContent="Go Live Edit",t.href=window.mwLiveEditIframeBackUrl,t.classList.add("sticky"),document.body.appendChild(t),t.classList.add("sticky");var a=document.createElement("style");a.textContent=`
                    #back-to-live-sticky-button {
                        position: fixed;
                        left: 50%;
                        transform: translateX(-50%);
                        z-index: 999;
                        transition: top 0.3s;
                        background: #3498db;
                        color: #fff !important;
                        padding: 10px 20px;
                        border-radius: 5px;
                        border-top-left-radius: 0;
                        border-top-right-radius: 0;
                        font-family: Arial, sans-serif;
                        border: none;
                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                        cursor: pointer;
                    }

                    #back-to-live-sticky-button:hover {
                        background: #2980b9;
                    }


                    #back-to-live-sticky-button.sticky {
                        top: 0;
                    }




            `,document.head.appendChild(a)}document.querySelectorAll('.no-select [class*="col"]').forEach(function(e){Array.from(e.children).filter(r=>r.classList.contains("element")).length&&e.classList.add("allow-select")})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
